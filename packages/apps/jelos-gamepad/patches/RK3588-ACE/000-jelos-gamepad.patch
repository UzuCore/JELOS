diff -rupN rinputer2.orig/main.c rinputer2/main.c
--- rinputer2.orig/main.c	2024-03-02 16:34:18.582729256 +0000
+++ rinputer2/main.c	2024-03-02 23:13:51.630859332 +0000
@@ -123,7 +123,7 @@ void *worker(void *data)
 			{
 				case EV_KEY:
 					ioctl(my_device->infd, EVIOCGBIT(EV_KEY, sizeof(codes)), &codes);
-					
+
 					// dividing by 8 because all values
 					// are stored as bits, not bytes
 					if((codes[BTN_SOUTH / 8]) & 1)
@@ -144,6 +144,9 @@ void *worker(void *data)
 					if((codes[ABS_X / 8]) & 1)
 						useful = 1;
 
+					if(codes[ABS_Z / 8])
+						useful = 1;
+
 					struct input_absinfo tmp;
 					for(int tmp_code = ABS_X; tmp_code < ABS_HAT3Y; tmp_code++)
 					{
@@ -244,7 +247,7 @@ int rescan_devices(struct rinputer_devic
 			continue;
 		// ignore steam-created controllers
 		// they have this name, with a digit at the end
-		if(strncmp("Microsoft X-Box 360 pad ", name, 24) == 0)
+		if(strncmp("Microsoft X-Box 360 pad", name, 24) == 0)
 			continue;
 
 		tmpdev = calloc(1, sizeof(struct rinputer_device));
@@ -328,9 +331,12 @@ int main(void)
 
 	ioctl(outfd, UI_SET_KEYBIT, BTN_TL);		// L1
 	ioctl(outfd, UI_SET_KEYBIT, BTN_TR);		// R1
-	
-	ioctl(outfd, UI_SET_KEYBIT, BTN_TR2);		// L2
-	ioctl(outfd, UI_SET_KEYBIT, BTN_TL2);		// R2
+
+	//ioctl(outfd, UI_SET_KEYBIT, BTN_TR2);		// L2
+	//ioctl(outfd, UI_SET_KEYBIT, BTN_TL2);		// R2
+
+	ioctl(outfd, UI_SET_KEYBIT, BTN_THUMBL);	// L3
+	ioctl(outfd, UI_SET_KEYBIT, BTN_THUMBR);	// R3
 
 	ioctl(outfd, UI_SET_KEYBIT, BTN_SELECT);
 	ioctl(outfd, UI_SET_KEYBIT, BTN_START);
@@ -356,9 +362,9 @@ int main(void)
 	// maybe we should pretend to be xbox gamepad?
 	memset(&usetup, 0, sizeof(usetup));
 	usetup.id.bustype = BUS_USB;
-	usetup.id.vendor = 0x1234;
-	usetup.id.product = 0x5678;
-	strcpy(usetup.name, "Rinputer");
+	usetup.id.vendor = 0x045e;
+	usetup.id.product = 0x028e;
+	strcpy(usetup.name, "Microsoft X-Box 360 pad");
 
 	ioctl(outfd, UI_DEV_SETUP, &usetup);
 	ioctl(outfd, UI_DEV_CREATE);
